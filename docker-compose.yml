version: "3.5"

x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: ./docker/airflow/Dockerfile
    args:
      PROJECT_NAME: ${PROJECT_NAME}
  environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql://${POSTGRES_USER}:\
        ${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_AIRFLOW_DB}"
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_FOLDER: /${PROJECT_NAME}/${PROJECT_SRC}/airflow_dags
      PYTHONPATH: /${PROJECT_NAME}
  volumes:
    - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
    - ./${PROJECT_SRC}/airflow_dags/pipeline_apis.py:/${PROJECT_NAME}/${PROJECT_SRC}/airflow_dags/pipeline_apis.py
    - ./${PROJECT_SRC}/airflow_dags/logs:/root/airflow/logs
  restart: always
  depends_on:
    - postgres

x-use_cases-common:
  &use_cases-common
  build:
    &use_cases-common-build
    context: .
    dockerfile: ./docker/use_cases/Dockerfile
    args:
      &use_cases-common-args
      PROJECT_NAME: ${PROJECT_NAME}
      PROJECT_SRC: ${PROJECT_SRC}
  restart: always


services:
  # region Airflow containers
  airflow-init: 
    <<: *airflow-common
    container_name: airflow-init
    command: >
      bash -c "airflow db init && 
      airflow users create  -u airflow -p airflow -r Admin -f Victor -l Rode√±o -e vrodeno@ucm.es"
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: airflow webserver -p 8080
    ports:
      - '${AIFLOW_PORT}:${AIFLOW_PORT}'
  
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: airflow scheduler
  # endregion
    
  # region MLflow container
  mlflow:
    container_name: mlflow
    build:
      context: .
      dockerfile: ./docker/mlflow/Dockerfile
      args:
        PROJECT_NAME: ${PROJECT_NAME}
    restart: always
    ports:
      - ${MLFLOW_PORT}:${MLFLOW_PORT}
    command: >
      mlflow server --backend-store-uri postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_PORT/$POSTGRES_MLFLOW_DB 
        --default-artifact-root $ARTIFACT_STORE_PATH
        --host $MLFLOW_HOST 
        --port $MLFLOW_PORT 
    volumes:
      - ./${ARTIFACT_STORE_PATH}:/${PROJECT_NAME}/${ARTIFACT_STORE_PATH}
    depends_on:
      - postgres
  # endregion


  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
      args:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - vol_postres:/var/lib/postgresql/data
    env_file:
      - .env

  # region Use cases
  validate_data:
    <<: *use_cases-common
    container_name: validate_data
    build:
      <<: *use_cases-common-build
      args:
        <<: *use_cases-common-args
        USE_CASE: ${USE_CASE_VALIDATE_DATA}
    volumes: 
      - ./${DATA_PATH}:/${PROJECT_NAME}/${DATA_PATH}
      - ./${LOGS_PATH}:/${PROJECT_NAME}/${LOGS_PATH}
      - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
      - ./${PROJECT_SRC}/shared/:/${PROJECT_NAME}/${PROJECT_SRC}/shared/
      - ./${PROJECT_SRC}/${USE_CASE_VALIDATE_DATA}/:/${PROJECT_NAME}/${PROJECT_SRC}/${USE_CASE_VALIDATE_DATA}/
    ports:
      - ${PORT_VALIDATE_DATA}:${PORT_VALIDATE_DATA}
    command: >
      uvicorn src.${USE_CASE_VALIDATE_DATA}.infrastructure.${API_FILE_VALIDATE_DATA}:rest_api 
        --host ${HOST_USE_CASES_APIS} --port ${PORT_VALIDATE_DATA}

  download_data:
    <<: *use_cases-common
    container_name: download_data
    build:
      <<: *use_cases-common-build
      args:
        <<: *use_cases-common-args
        USE_CASE: ${USE_CASE_DOWNLOAD_DATA}
    volumes: 
      - ./${DATA_PATH}:/${PROJECT_NAME}/${DATA_PATH}
      - ./${LOGS_PATH}:/${PROJECT_NAME}/${LOGS_PATH}
      - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
      - ./${PROJECT_SRC}/shared/:/${PROJECT_NAME}/${PROJECT_SRC}/shared/
      - ./${PROJECT_SRC}/${USE_CASE_DOWNLOAD_DATA}/:/${PROJECT_NAME}/${PROJECT_SRC}/${USE_CASE_DOWNLOAD_DATA}/
    ports:
      - ${PORT_DOWNLOAD_DATA}:${PORT_DOWNLOAD_DATA}
    command: >
      uvicorn src.${USE_CASE_DOWNLOAD_DATA}.infrastructure.${API_FILE_DOWNLOAD_DATA}:rest_api 
        --host ${HOST_USE_CASES_APIS} --port ${PORT_DOWNLOAD_DATA}
#uvicorn src.download_data.infrastructure.request_data_downloander_api:rest_api --host 0.0.0.0 --port 1213

  version_data:
    <<: *use_cases-common
    container_name: version_data
    build:
      <<: *use_cases-common-build
      args:
        <<: *use_cases-common-args
        USE_CASE: ${USE_CASE_VERSION_DATA}
    volumes: 
      - ./${DATA_PATH}:/${PROJECT_NAME}/${DATA_PATH}
      - ./${LOGS_PATH}:/${PROJECT_NAME}/${LOGS_PATH}
      - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
      - ./${PROJECT_SRC}/shared/:/${PROJECT_NAME}/${PROJECT_SRC}/shared/
      - ./${PROJECT_SRC}/${USE_CASE_VERSION_DATA}/:/${PROJECT_NAME}/${PROJECT_SRC}/${USE_CASE_VERSION_DATA}/
      - ./.dvc/:/${PROJECT_NAME}/.dvc/
      - ./.git/:/${PROJECT_NAME}/.git/
      - /home/lenovo/.ssh/:/root/.ssh/
    ports:
      - ${PORT_VERSION_DATA}:${PORT_VERSION_DATA}
    command: >
      bash -c "git config user.name victorviro &&
      git config user.email victor_sanchez91@hotmail.es &&
      uvicorn src.${USE_CASE_VERSION_DATA}.infrastructure.${API_FILE_VERSION_DATA}:rest_api \
        --host ${HOST_USE_CASES_APIS} --port ${PORT_VERSION_DATA}"
# /bin/sh -c "./docker/use_cases/version_data/entrypoint_init_git.sh" &

  transform_data:
    <<: *use_cases-common
    container_name: transform_data
    build:
      <<: *use_cases-common-build
      args:
        <<: *use_cases-common-args
        USE_CASE: ${USE_CASE_TRANSFORM_DATA}
    volumes: 
      - ./${DATA_PATH}:/${PROJECT_NAME}/${DATA_PATH}
      - ./${LOGS_PATH}:/${PROJECT_NAME}/${LOGS_PATH}
      - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
      - ./${PROJECT_SRC}/shared/:/${PROJECT_NAME}/${PROJECT_SRC}/shared/
      - ./${PROJECT_SRC}/${USE_CASE_TRANSFORM_DATA}/:/${PROJECT_NAME}/${PROJECT_SRC}/${USE_CASE_TRANSFORM_DATA}/
    ports:
      - ${PORT_TRANSFORM_DATA}:${PORT_TRANSFORM_DATA}
    command: >
      uvicorn src.${USE_CASE_TRANSFORM_DATA}.infrastructure.${API_FILE_TRANSFORM_DATA}:rest_api 
        --host ${HOST_USE_CASES_APIS} --port ${PORT_TRANSFORM_DATA}
  
  train_model:
    <<: *use_cases-common
    container_name: train_model
    build:
      <<: *use_cases-common-build
      args:
        <<: *use_cases-common-args
        USE_CASE: ${USE_CASE_TRAIN_MODEL}
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:$MLFLOW_PORT
    volumes: 
      - ./${DATA_PATH}:/${PROJECT_NAME}/${DATA_PATH}
      - ./${MODELS_PATH}:/${PROJECT_NAME}/${MODELS_PATH}
      - ./${ARTIFACT_STORE_PATH}:/${PROJECT_NAME}/${ARTIFACT_STORE_PATH}
      - ./${LOGS_PATH}:/${PROJECT_NAME}/${LOGS_PATH}
      - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
      - ./${PROJECT_SRC}/shared/:/${PROJECT_NAME}/${PROJECT_SRC}/shared/
      - ./${PROJECT_SRC}/${USE_CASE_TRAIN_MODEL}/:/${PROJECT_NAME}/${PROJECT_SRC}/${USE_CASE_TRAIN_MODEL}/
      - ./.dvc/:/${PROJECT_NAME}/.dvc/
      - ./.git/:/${PROJECT_NAME}/.git/
    ports:
      - ${PORT_TRAIN_MODEL}:${PORT_TRAIN_MODEL}
    command: >
      uvicorn src.${USE_CASE_TRAIN_MODEL}.infrastructure.${API_FILE_TRAIN_MODEL}:rest_api 
        --host ${HOST_USE_CASES_APIS} --port ${PORT_TRAIN_MODEL}

  validate_model:
    <<: *use_cases-common
    container_name: validate_model
    build:
      <<: *use_cases-common-build
      args:
        <<: *use_cases-common-args
        USE_CASE: ${USE_CASE_VALIDATE_MODEL}
    volumes: 
      - ./${DATA_PATH}:/${PROJECT_NAME}/${DATA_PATH}
      - ./${MODELS_PATH}:/${PROJECT_NAME}/${MODELS_PATH}
      - ./${LOGS_PATH}:/${PROJECT_NAME}/${LOGS_PATH}
      - ./${PROJECT_SRC}/config_variables.py:/${PROJECT_NAME}/${PROJECT_SRC}/config_variables.py
      - ./${PROJECT_SRC}/shared/:/${PROJECT_NAME}/${PROJECT_SRC}/shared/
      - ./${PROJECT_SRC}/${USE_CASE_VALIDATE_MODEL}/:/${PROJECT_NAME}/${PROJECT_SRC}/${USE_CASE_VALIDATE_MODEL}/
    ports:
      - ${PORT_VALIDATE_MODEL}:${PORT_VALIDATE_MODEL}
    command: >
      uvicorn src.${USE_CASE_VALIDATE_MODEL}.infrastructure.${API_FILE_VALIDATE_MODEL}:rest_api 
        --host ${HOST_USE_CASES_APIS} --port ${PORT_VALIDATE_MODEL}
  # endregion


volumes:
  vol_postres:
    driver: local
